/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.3.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * recipient object
 */
@ApiModel(description = "recipient object")
@JsonPropertyOrder({
  GetCharactersCharacterIdMailRecipient.JSON_PROPERTY_RECIPIENT_ID,
  GetCharactersCharacterIdMailRecipient.JSON_PROPERTY_RECIPIENT_TYPE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-06-04T13:00:04.672Z[Etc/UTC]")
public class GetCharactersCharacterIdMailRecipient implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_RECIPIENT_ID = "recipient_id";
  private Integer recipientId;

  /**
   * recipient_type string
   */
  public enum RecipientTypeEnum {
    ALLIANCE("alliance"),
    
    CHARACTER("character"),
    
    CORPORATION("corporation"),
    
    MAILING_LIST("mailing_list");

    private String value;

    RecipientTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RecipientTypeEnum fromValue(String value) {
      for (RecipientTypeEnum b : RecipientTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_RECIPIENT_TYPE = "recipient_type";
  private RecipientTypeEnum recipientType;


  public GetCharactersCharacterIdMailRecipient recipientId(Integer recipientId) {
    
    this.recipientId = recipientId;
    return this;
  }

   /**
   * recipient_id integer
   * @return recipientId
  **/
  @ApiModelProperty(required = true, value = "recipient_id integer")
  @JsonProperty(JSON_PROPERTY_RECIPIENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getRecipientId() {
    return recipientId;
  }


  public void setRecipientId(Integer recipientId) {
    this.recipientId = recipientId;
  }


  public GetCharactersCharacterIdMailRecipient recipientType(RecipientTypeEnum recipientType) {
    
    this.recipientType = recipientType;
    return this;
  }

   /**
   * recipient_type string
   * @return recipientType
  **/
  @ApiModelProperty(required = true, value = "recipient_type string")
  @JsonProperty(JSON_PROPERTY_RECIPIENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RecipientTypeEnum getRecipientType() {
    return recipientType;
  }


  public void setRecipientType(RecipientTypeEnum recipientType) {
    this.recipientType = recipientType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetCharactersCharacterIdMailRecipient getCharactersCharacterIdMailRecipient = (GetCharactersCharacterIdMailRecipient) o;
    return Objects.equals(this.recipientId, getCharactersCharacterIdMailRecipient.recipientId) &&
        Objects.equals(this.recipientType, getCharactersCharacterIdMailRecipient.recipientType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(recipientId, recipientType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetCharactersCharacterIdMailRecipient {\n");
    sb.append("    recipientId: ").append(toIndentedString(recipientId)).append("\n");
    sb.append("    recipientType: ").append(toIndentedString(recipientType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

