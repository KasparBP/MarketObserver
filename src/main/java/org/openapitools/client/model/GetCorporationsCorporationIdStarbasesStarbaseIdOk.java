/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.3.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.GetCorporationsCorporationIdStarbasesStarbaseIdFuel;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * 200 ok object
 */
@ApiModel(description = "200 ok object")
@JsonPropertyOrder({
  GetCorporationsCorporationIdStarbasesStarbaseIdOk.JSON_PROPERTY_ALLOW_ALLIANCE_MEMBERS,
  GetCorporationsCorporationIdStarbasesStarbaseIdOk.JSON_PROPERTY_ALLOW_CORPORATION_MEMBERS,
  GetCorporationsCorporationIdStarbasesStarbaseIdOk.JSON_PROPERTY_ANCHOR,
  GetCorporationsCorporationIdStarbasesStarbaseIdOk.JSON_PROPERTY_ATTACK_IF_AT_WAR,
  GetCorporationsCorporationIdStarbasesStarbaseIdOk.JSON_PROPERTY_ATTACK_IF_OTHER_SECURITY_STATUS_DROPPING,
  GetCorporationsCorporationIdStarbasesStarbaseIdOk.JSON_PROPERTY_ATTACK_SECURITY_STATUS_THRESHOLD,
  GetCorporationsCorporationIdStarbasesStarbaseIdOk.JSON_PROPERTY_ATTACK_STANDING_THRESHOLD,
  GetCorporationsCorporationIdStarbasesStarbaseIdOk.JSON_PROPERTY_FUEL_BAY_TAKE,
  GetCorporationsCorporationIdStarbasesStarbaseIdOk.JSON_PROPERTY_FUEL_BAY_VIEW,
  GetCorporationsCorporationIdStarbasesStarbaseIdOk.JSON_PROPERTY_FUELS,
  GetCorporationsCorporationIdStarbasesStarbaseIdOk.JSON_PROPERTY_OFFLINE,
  GetCorporationsCorporationIdStarbasesStarbaseIdOk.JSON_PROPERTY_ONLINE,
  GetCorporationsCorporationIdStarbasesStarbaseIdOk.JSON_PROPERTY_UNANCHOR,
  GetCorporationsCorporationIdStarbasesStarbaseIdOk.JSON_PROPERTY_USE_ALLIANCE_STANDINGS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-06-04T13:00:04.672Z[Etc/UTC]")
public class GetCorporationsCorporationIdStarbasesStarbaseIdOk implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ALLOW_ALLIANCE_MEMBERS = "allow_alliance_members";
  private Boolean allowAllianceMembers;

  public static final String JSON_PROPERTY_ALLOW_CORPORATION_MEMBERS = "allow_corporation_members";
  private Boolean allowCorporationMembers;

  /**
   * Who can anchor starbase (POS) and its structures
   */
  public enum AnchorEnum {
    ALLIANCE_MEMBER("alliance_member"),
    
    CONFIG_STARBASE_EQUIPMENT_ROLE("config_starbase_equipment_role"),
    
    CORPORATION_MEMBER("corporation_member"),
    
    STARBASE_FUEL_TECHNICIAN_ROLE("starbase_fuel_technician_role");

    private String value;

    AnchorEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AnchorEnum fromValue(String value) {
      for (AnchorEnum b : AnchorEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ANCHOR = "anchor";
  private AnchorEnum anchor;

  public static final String JSON_PROPERTY_ATTACK_IF_AT_WAR = "attack_if_at_war";
  private Boolean attackIfAtWar;

  public static final String JSON_PROPERTY_ATTACK_IF_OTHER_SECURITY_STATUS_DROPPING = "attack_if_other_security_status_dropping";
  private Boolean attackIfOtherSecurityStatusDropping;

  public static final String JSON_PROPERTY_ATTACK_SECURITY_STATUS_THRESHOLD = "attack_security_status_threshold";
  private Float attackSecurityStatusThreshold;

  public static final String JSON_PROPERTY_ATTACK_STANDING_THRESHOLD = "attack_standing_threshold";
  private Float attackStandingThreshold;

  /**
   * Who can take fuel blocks out of the starbase (POS)&#39;s fuel bay
   */
  public enum FuelBayTakeEnum {
    ALLIANCE_MEMBER("alliance_member"),
    
    CONFIG_STARBASE_EQUIPMENT_ROLE("config_starbase_equipment_role"),
    
    CORPORATION_MEMBER("corporation_member"),
    
    STARBASE_FUEL_TECHNICIAN_ROLE("starbase_fuel_technician_role");

    private String value;

    FuelBayTakeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FuelBayTakeEnum fromValue(String value) {
      for (FuelBayTakeEnum b : FuelBayTakeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_FUEL_BAY_TAKE = "fuel_bay_take";
  private FuelBayTakeEnum fuelBayTake;

  /**
   * Who can view the starbase (POS)&#39;s fule bay. Characters either need to have required role or belong to the starbase (POS) owner&#39;s corporation or alliance, as described by the enum, all other access settings follows the same scheme
   */
  public enum FuelBayViewEnum {
    ALLIANCE_MEMBER("alliance_member"),
    
    CONFIG_STARBASE_EQUIPMENT_ROLE("config_starbase_equipment_role"),
    
    CORPORATION_MEMBER("corporation_member"),
    
    STARBASE_FUEL_TECHNICIAN_ROLE("starbase_fuel_technician_role");

    private String value;

    FuelBayViewEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FuelBayViewEnum fromValue(String value) {
      for (FuelBayViewEnum b : FuelBayViewEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_FUEL_BAY_VIEW = "fuel_bay_view";
  private FuelBayViewEnum fuelBayView;

  public static final String JSON_PROPERTY_FUELS = "fuels";
  private List<GetCorporationsCorporationIdStarbasesStarbaseIdFuel> fuels = null;

  /**
   * Who can offline starbase (POS) and its structures
   */
  public enum OfflineEnum {
    ALLIANCE_MEMBER("alliance_member"),
    
    CONFIG_STARBASE_EQUIPMENT_ROLE("config_starbase_equipment_role"),
    
    CORPORATION_MEMBER("corporation_member"),
    
    STARBASE_FUEL_TECHNICIAN_ROLE("starbase_fuel_technician_role");

    private String value;

    OfflineEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OfflineEnum fromValue(String value) {
      for (OfflineEnum b : OfflineEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_OFFLINE = "offline";
  private OfflineEnum offline;

  /**
   * Who can online starbase (POS) and its structures
   */
  public enum OnlineEnum {
    ALLIANCE_MEMBER("alliance_member"),
    
    CONFIG_STARBASE_EQUIPMENT_ROLE("config_starbase_equipment_role"),
    
    CORPORATION_MEMBER("corporation_member"),
    
    STARBASE_FUEL_TECHNICIAN_ROLE("starbase_fuel_technician_role");

    private String value;

    OnlineEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OnlineEnum fromValue(String value) {
      for (OnlineEnum b : OnlineEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ONLINE = "online";
  private OnlineEnum online;

  /**
   * Who can unanchor starbase (POS) and its structures
   */
  public enum UnanchorEnum {
    ALLIANCE_MEMBER("alliance_member"),
    
    CONFIG_STARBASE_EQUIPMENT_ROLE("config_starbase_equipment_role"),
    
    CORPORATION_MEMBER("corporation_member"),
    
    STARBASE_FUEL_TECHNICIAN_ROLE("starbase_fuel_technician_role");

    private String value;

    UnanchorEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static UnanchorEnum fromValue(String value) {
      for (UnanchorEnum b : UnanchorEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_UNANCHOR = "unanchor";
  private UnanchorEnum unanchor;

  public static final String JSON_PROPERTY_USE_ALLIANCE_STANDINGS = "use_alliance_standings";
  private Boolean useAllianceStandings;


  public GetCorporationsCorporationIdStarbasesStarbaseIdOk allowAllianceMembers(Boolean allowAllianceMembers) {
    
    this.allowAllianceMembers = allowAllianceMembers;
    return this;
  }

   /**
   * allow_alliance_members boolean
   * @return allowAllianceMembers
  **/
  @ApiModelProperty(required = true, value = "allow_alliance_members boolean")
  @JsonProperty(JSON_PROPERTY_ALLOW_ALLIANCE_MEMBERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getAllowAllianceMembers() {
    return allowAllianceMembers;
  }


  public void setAllowAllianceMembers(Boolean allowAllianceMembers) {
    this.allowAllianceMembers = allowAllianceMembers;
  }


  public GetCorporationsCorporationIdStarbasesStarbaseIdOk allowCorporationMembers(Boolean allowCorporationMembers) {
    
    this.allowCorporationMembers = allowCorporationMembers;
    return this;
  }

   /**
   * allow_corporation_members boolean
   * @return allowCorporationMembers
  **/
  @ApiModelProperty(required = true, value = "allow_corporation_members boolean")
  @JsonProperty(JSON_PROPERTY_ALLOW_CORPORATION_MEMBERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getAllowCorporationMembers() {
    return allowCorporationMembers;
  }


  public void setAllowCorporationMembers(Boolean allowCorporationMembers) {
    this.allowCorporationMembers = allowCorporationMembers;
  }


  public GetCorporationsCorporationIdStarbasesStarbaseIdOk anchor(AnchorEnum anchor) {
    
    this.anchor = anchor;
    return this;
  }

   /**
   * Who can anchor starbase (POS) and its structures
   * @return anchor
  **/
  @ApiModelProperty(required = true, value = "Who can anchor starbase (POS) and its structures")
  @JsonProperty(JSON_PROPERTY_ANCHOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AnchorEnum getAnchor() {
    return anchor;
  }


  public void setAnchor(AnchorEnum anchor) {
    this.anchor = anchor;
  }


  public GetCorporationsCorporationIdStarbasesStarbaseIdOk attackIfAtWar(Boolean attackIfAtWar) {
    
    this.attackIfAtWar = attackIfAtWar;
    return this;
  }

   /**
   * attack_if_at_war boolean
   * @return attackIfAtWar
  **/
  @ApiModelProperty(required = true, value = "attack_if_at_war boolean")
  @JsonProperty(JSON_PROPERTY_ATTACK_IF_AT_WAR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getAttackIfAtWar() {
    return attackIfAtWar;
  }


  public void setAttackIfAtWar(Boolean attackIfAtWar) {
    this.attackIfAtWar = attackIfAtWar;
  }


  public GetCorporationsCorporationIdStarbasesStarbaseIdOk attackIfOtherSecurityStatusDropping(Boolean attackIfOtherSecurityStatusDropping) {
    
    this.attackIfOtherSecurityStatusDropping = attackIfOtherSecurityStatusDropping;
    return this;
  }

   /**
   * attack_if_other_security_status_dropping boolean
   * @return attackIfOtherSecurityStatusDropping
  **/
  @ApiModelProperty(required = true, value = "attack_if_other_security_status_dropping boolean")
  @JsonProperty(JSON_PROPERTY_ATTACK_IF_OTHER_SECURITY_STATUS_DROPPING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getAttackIfOtherSecurityStatusDropping() {
    return attackIfOtherSecurityStatusDropping;
  }


  public void setAttackIfOtherSecurityStatusDropping(Boolean attackIfOtherSecurityStatusDropping) {
    this.attackIfOtherSecurityStatusDropping = attackIfOtherSecurityStatusDropping;
  }


  public GetCorporationsCorporationIdStarbasesStarbaseIdOk attackSecurityStatusThreshold(Float attackSecurityStatusThreshold) {
    
    this.attackSecurityStatusThreshold = attackSecurityStatusThreshold;
    return this;
  }

   /**
   * Starbase (POS) will attack if target&#39;s security standing is lower than this value
   * @return attackSecurityStatusThreshold
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Starbase (POS) will attack if target's security standing is lower than this value")
  @JsonProperty(JSON_PROPERTY_ATTACK_SECURITY_STATUS_THRESHOLD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getAttackSecurityStatusThreshold() {
    return attackSecurityStatusThreshold;
  }


  public void setAttackSecurityStatusThreshold(Float attackSecurityStatusThreshold) {
    this.attackSecurityStatusThreshold = attackSecurityStatusThreshold;
  }


  public GetCorporationsCorporationIdStarbasesStarbaseIdOk attackStandingThreshold(Float attackStandingThreshold) {
    
    this.attackStandingThreshold = attackStandingThreshold;
    return this;
  }

   /**
   * Starbase (POS) will attack if target&#39;s standing is lower than this value
   * @return attackStandingThreshold
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Starbase (POS) will attack if target's standing is lower than this value")
  @JsonProperty(JSON_PROPERTY_ATTACK_STANDING_THRESHOLD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getAttackStandingThreshold() {
    return attackStandingThreshold;
  }


  public void setAttackStandingThreshold(Float attackStandingThreshold) {
    this.attackStandingThreshold = attackStandingThreshold;
  }


  public GetCorporationsCorporationIdStarbasesStarbaseIdOk fuelBayTake(FuelBayTakeEnum fuelBayTake) {
    
    this.fuelBayTake = fuelBayTake;
    return this;
  }

   /**
   * Who can take fuel blocks out of the starbase (POS)&#39;s fuel bay
   * @return fuelBayTake
  **/
  @ApiModelProperty(required = true, value = "Who can take fuel blocks out of the starbase (POS)'s fuel bay")
  @JsonProperty(JSON_PROPERTY_FUEL_BAY_TAKE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public FuelBayTakeEnum getFuelBayTake() {
    return fuelBayTake;
  }


  public void setFuelBayTake(FuelBayTakeEnum fuelBayTake) {
    this.fuelBayTake = fuelBayTake;
  }


  public GetCorporationsCorporationIdStarbasesStarbaseIdOk fuelBayView(FuelBayViewEnum fuelBayView) {
    
    this.fuelBayView = fuelBayView;
    return this;
  }

   /**
   * Who can view the starbase (POS)&#39;s fule bay. Characters either need to have required role or belong to the starbase (POS) owner&#39;s corporation or alliance, as described by the enum, all other access settings follows the same scheme
   * @return fuelBayView
  **/
  @ApiModelProperty(required = true, value = "Who can view the starbase (POS)'s fule bay. Characters either need to have required role or belong to the starbase (POS) owner's corporation or alliance, as described by the enum, all other access settings follows the same scheme")
  @JsonProperty(JSON_PROPERTY_FUEL_BAY_VIEW)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public FuelBayViewEnum getFuelBayView() {
    return fuelBayView;
  }


  public void setFuelBayView(FuelBayViewEnum fuelBayView) {
    this.fuelBayView = fuelBayView;
  }


  public GetCorporationsCorporationIdStarbasesStarbaseIdOk fuels(List<GetCorporationsCorporationIdStarbasesStarbaseIdFuel> fuels) {
    
    this.fuels = fuels;
    return this;
  }

  public GetCorporationsCorporationIdStarbasesStarbaseIdOk addFuelsItem(GetCorporationsCorporationIdStarbasesStarbaseIdFuel fuelsItem) {
    if (this.fuels == null) {
      this.fuels = new ArrayList<>();
    }
    this.fuels.add(fuelsItem);
    return this;
  }

   /**
   * Fuel blocks and other things that will be consumed when operating a starbase (POS)
   * @return fuels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Fuel blocks and other things that will be consumed when operating a starbase (POS)")
  @JsonProperty(JSON_PROPERTY_FUELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<GetCorporationsCorporationIdStarbasesStarbaseIdFuel> getFuels() {
    return fuels;
  }


  public void setFuels(List<GetCorporationsCorporationIdStarbasesStarbaseIdFuel> fuels) {
    this.fuels = fuels;
  }


  public GetCorporationsCorporationIdStarbasesStarbaseIdOk offline(OfflineEnum offline) {
    
    this.offline = offline;
    return this;
  }

   /**
   * Who can offline starbase (POS) and its structures
   * @return offline
  **/
  @ApiModelProperty(required = true, value = "Who can offline starbase (POS) and its structures")
  @JsonProperty(JSON_PROPERTY_OFFLINE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OfflineEnum getOffline() {
    return offline;
  }


  public void setOffline(OfflineEnum offline) {
    this.offline = offline;
  }


  public GetCorporationsCorporationIdStarbasesStarbaseIdOk online(OnlineEnum online) {
    
    this.online = online;
    return this;
  }

   /**
   * Who can online starbase (POS) and its structures
   * @return online
  **/
  @ApiModelProperty(required = true, value = "Who can online starbase (POS) and its structures")
  @JsonProperty(JSON_PROPERTY_ONLINE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OnlineEnum getOnline() {
    return online;
  }


  public void setOnline(OnlineEnum online) {
    this.online = online;
  }


  public GetCorporationsCorporationIdStarbasesStarbaseIdOk unanchor(UnanchorEnum unanchor) {
    
    this.unanchor = unanchor;
    return this;
  }

   /**
   * Who can unanchor starbase (POS) and its structures
   * @return unanchor
  **/
  @ApiModelProperty(required = true, value = "Who can unanchor starbase (POS) and its structures")
  @JsonProperty(JSON_PROPERTY_UNANCHOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UnanchorEnum getUnanchor() {
    return unanchor;
  }


  public void setUnanchor(UnanchorEnum unanchor) {
    this.unanchor = unanchor;
  }


  public GetCorporationsCorporationIdStarbasesStarbaseIdOk useAllianceStandings(Boolean useAllianceStandings) {
    
    this.useAllianceStandings = useAllianceStandings;
    return this;
  }

   /**
   * True if the starbase (POS) is using alliance standings, otherwise using corporation&#39;s
   * @return useAllianceStandings
  **/
  @ApiModelProperty(required = true, value = "True if the starbase (POS) is using alliance standings, otherwise using corporation's")
  @JsonProperty(JSON_PROPERTY_USE_ALLIANCE_STANDINGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getUseAllianceStandings() {
    return useAllianceStandings;
  }


  public void setUseAllianceStandings(Boolean useAllianceStandings) {
    this.useAllianceStandings = useAllianceStandings;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetCorporationsCorporationIdStarbasesStarbaseIdOk getCorporationsCorporationIdStarbasesStarbaseIdOk = (GetCorporationsCorporationIdStarbasesStarbaseIdOk) o;
    return Objects.equals(this.allowAllianceMembers, getCorporationsCorporationIdStarbasesStarbaseIdOk.allowAllianceMembers) &&
        Objects.equals(this.allowCorporationMembers, getCorporationsCorporationIdStarbasesStarbaseIdOk.allowCorporationMembers) &&
        Objects.equals(this.anchor, getCorporationsCorporationIdStarbasesStarbaseIdOk.anchor) &&
        Objects.equals(this.attackIfAtWar, getCorporationsCorporationIdStarbasesStarbaseIdOk.attackIfAtWar) &&
        Objects.equals(this.attackIfOtherSecurityStatusDropping, getCorporationsCorporationIdStarbasesStarbaseIdOk.attackIfOtherSecurityStatusDropping) &&
        Objects.equals(this.attackSecurityStatusThreshold, getCorporationsCorporationIdStarbasesStarbaseIdOk.attackSecurityStatusThreshold) &&
        Objects.equals(this.attackStandingThreshold, getCorporationsCorporationIdStarbasesStarbaseIdOk.attackStandingThreshold) &&
        Objects.equals(this.fuelBayTake, getCorporationsCorporationIdStarbasesStarbaseIdOk.fuelBayTake) &&
        Objects.equals(this.fuelBayView, getCorporationsCorporationIdStarbasesStarbaseIdOk.fuelBayView) &&
        Objects.equals(this.fuels, getCorporationsCorporationIdStarbasesStarbaseIdOk.fuels) &&
        Objects.equals(this.offline, getCorporationsCorporationIdStarbasesStarbaseIdOk.offline) &&
        Objects.equals(this.online, getCorporationsCorporationIdStarbasesStarbaseIdOk.online) &&
        Objects.equals(this.unanchor, getCorporationsCorporationIdStarbasesStarbaseIdOk.unanchor) &&
        Objects.equals(this.useAllianceStandings, getCorporationsCorporationIdStarbasesStarbaseIdOk.useAllianceStandings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowAllianceMembers, allowCorporationMembers, anchor, attackIfAtWar, attackIfOtherSecurityStatusDropping, attackSecurityStatusThreshold, attackStandingThreshold, fuelBayTake, fuelBayView, fuels, offline, online, unanchor, useAllianceStandings);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetCorporationsCorporationIdStarbasesStarbaseIdOk {\n");
    sb.append("    allowAllianceMembers: ").append(toIndentedString(allowAllianceMembers)).append("\n");
    sb.append("    allowCorporationMembers: ").append(toIndentedString(allowCorporationMembers)).append("\n");
    sb.append("    anchor: ").append(toIndentedString(anchor)).append("\n");
    sb.append("    attackIfAtWar: ").append(toIndentedString(attackIfAtWar)).append("\n");
    sb.append("    attackIfOtherSecurityStatusDropping: ").append(toIndentedString(attackIfOtherSecurityStatusDropping)).append("\n");
    sb.append("    attackSecurityStatusThreshold: ").append(toIndentedString(attackSecurityStatusThreshold)).append("\n");
    sb.append("    attackStandingThreshold: ").append(toIndentedString(attackStandingThreshold)).append("\n");
    sb.append("    fuelBayTake: ").append(toIndentedString(fuelBayTake)).append("\n");
    sb.append("    fuelBayView: ").append(toIndentedString(fuelBayView)).append("\n");
    sb.append("    fuels: ").append(toIndentedString(fuels)).append("\n");
    sb.append("    offline: ").append(toIndentedString(offline)).append("\n");
    sb.append("    online: ").append(toIndentedString(online)).append("\n");
    sb.append("    unanchor: ").append(toIndentedString(unanchor)).append("\n");
    sb.append("    useAllianceStandings: ").append(toIndentedString(useAllianceStandings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

