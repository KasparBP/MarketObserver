/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.3.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * 200 ok object
 */
@ApiModel(description = "200 ok object")
@JsonPropertyOrder({
  GetMarketsRegionIdHistory200Ok.JSON_PROPERTY_AVERAGE,
  GetMarketsRegionIdHistory200Ok.JSON_PROPERTY_DATE,
  GetMarketsRegionIdHistory200Ok.JSON_PROPERTY_HIGHEST,
  GetMarketsRegionIdHistory200Ok.JSON_PROPERTY_LOWEST,
  GetMarketsRegionIdHistory200Ok.JSON_PROPERTY_ORDER_COUNT,
  GetMarketsRegionIdHistory200Ok.JSON_PROPERTY_VOLUME
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-06-04T13:00:04.672Z[Etc/UTC]")
public class GetMarketsRegionIdHistory200Ok implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_AVERAGE = "average";
  private Double average;

  public static final String JSON_PROPERTY_DATE = "date";
  private LocalDate date;

  public static final String JSON_PROPERTY_HIGHEST = "highest";
  private Double highest;

  public static final String JSON_PROPERTY_LOWEST = "lowest";
  private Double lowest;

  public static final String JSON_PROPERTY_ORDER_COUNT = "order_count";
  private Long orderCount;

  public static final String JSON_PROPERTY_VOLUME = "volume";
  private Long volume;


  public GetMarketsRegionIdHistory200Ok average(Double average) {
    
    this.average = average;
    return this;
  }

   /**
   * average number
   * @return average
  **/
  @ApiModelProperty(required = true, value = "average number")
  @JsonProperty(JSON_PROPERTY_AVERAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getAverage() {
    return average;
  }


  public void setAverage(Double average) {
    this.average = average;
  }


  public GetMarketsRegionIdHistory200Ok date(LocalDate date) {
    
    this.date = date;
    return this;
  }

   /**
   * The date of this historical statistic entry
   * @return date
  **/
  @ApiModelProperty(required = true, value = "The date of this historical statistic entry")
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LocalDate getDate() {
    return date;
  }


  public void setDate(LocalDate date) {
    this.date = date;
  }


  public GetMarketsRegionIdHistory200Ok highest(Double highest) {
    
    this.highest = highest;
    return this;
  }

   /**
   * highest number
   * @return highest
  **/
  @ApiModelProperty(required = true, value = "highest number")
  @JsonProperty(JSON_PROPERTY_HIGHEST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getHighest() {
    return highest;
  }


  public void setHighest(Double highest) {
    this.highest = highest;
  }


  public GetMarketsRegionIdHistory200Ok lowest(Double lowest) {
    
    this.lowest = lowest;
    return this;
  }

   /**
   * lowest number
   * @return lowest
  **/
  @ApiModelProperty(required = true, value = "lowest number")
  @JsonProperty(JSON_PROPERTY_LOWEST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getLowest() {
    return lowest;
  }


  public void setLowest(Double lowest) {
    this.lowest = lowest;
  }


  public GetMarketsRegionIdHistory200Ok orderCount(Long orderCount) {
    
    this.orderCount = orderCount;
    return this;
  }

   /**
   * Total number of orders happened that day
   * @return orderCount
  **/
  @ApiModelProperty(required = true, value = "Total number of orders happened that day")
  @JsonProperty(JSON_PROPERTY_ORDER_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getOrderCount() {
    return orderCount;
  }


  public void setOrderCount(Long orderCount) {
    this.orderCount = orderCount;
  }


  public GetMarketsRegionIdHistory200Ok volume(Long volume) {
    
    this.volume = volume;
    return this;
  }

   /**
   * Total
   * @return volume
  **/
  @ApiModelProperty(required = true, value = "Total")
  @JsonProperty(JSON_PROPERTY_VOLUME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getVolume() {
    return volume;
  }


  public void setVolume(Long volume) {
    this.volume = volume;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetMarketsRegionIdHistory200Ok getMarketsRegionIdHistory200Ok = (GetMarketsRegionIdHistory200Ok) o;
    return Objects.equals(this.average, getMarketsRegionIdHistory200Ok.average) &&
        Objects.equals(this.date, getMarketsRegionIdHistory200Ok.date) &&
        Objects.equals(this.highest, getMarketsRegionIdHistory200Ok.highest) &&
        Objects.equals(this.lowest, getMarketsRegionIdHistory200Ok.lowest) &&
        Objects.equals(this.orderCount, getMarketsRegionIdHistory200Ok.orderCount) &&
        Objects.equals(this.volume, getMarketsRegionIdHistory200Ok.volume);
  }

  @Override
  public int hashCode() {
    return Objects.hash(average, date, highest, lowest, orderCount, volume);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetMarketsRegionIdHistory200Ok {\n");
    sb.append("    average: ").append(toIndentedString(average)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    highest: ").append(toIndentedString(highest)).append("\n");
    sb.append("    lowest: ").append(toIndentedString(lowest)).append("\n");
    sb.append("    orderCount: ").append(toIndentedString(orderCount)).append("\n");
    sb.append("    volume: ").append(toIndentedString(volume)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

